/*
 * File: app/view/SelectFieldWindow.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('QueryBuilder.view.SelectFieldWindow', {
    extend: 'Ext.window.Window',

    requires: [
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.toolbar.Separator',
        'Ext.grid.Panel',
        'Ext.grid.column.Column',
        'Ext.grid.View',
        'Ext.selection.CheckboxModel'
    ],

    height: 325,
    width: 531,
    layout: 'fit',
    title: 'Список полей объекта',
    maximizable: true,
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    layout: {
                        type: 'hbox',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button',
                            disabled: true,
                            itemId: 'BtnSelect',
                            text: 'Выбрать',
                            listeners: {
                                click: {
                                    fn: me.onButtonSelectClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'tbseparator'
                        },
                        {
                            xtype: 'button',
                            text: 'Закрыть',
                            listeners: {
                                click: {
                                    fn: me.onCloseButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    itemId: 'GridList',
                    overlapHeader: false,
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'field_descr',
                            text: 'Наименование поля',
                            flex: 1
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 150,
                            dataIndex: 'field_code',
                            text: 'Код поля'
                        }
                    ],
                    listeners: {
                        selectionchange: {
                            fn: me.onGridListReportSelectionChange,
                            scope: me
                        },
                        itemdblclick: {
                            fn: me.onGridListReportItemDblClick,
                            scope: me
                        }
                    },
                    selModel: Ext.create('Ext.selection.CheckboxModel', {

                    })
                }
            ],
            listeners: {
                show: {
                    fn: me.onWindowShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onButtonSelectClick: function(button, e, eOpts) {
        var win=button.findParentByType('window');
        var _grid_ListAnalPanel=win.down('#GridList');
        win.fireEvent('BtnOk',
                      _grid_ListAnalPanel.getSelectionModel().getSelection());
    },

    onCloseButtonClick: function(button, e, eOpts) {
        CloseWindow(button.findParentByType('window'));
    },

    onGridListReportSelectionChange: function(model, selected, eOpts) {
        if (selected.length > 0) {
            this.down('#BtnSelect').enable();
        } else {
            this.down('#BtnSelect').disable();
        }
    },

    onGridListReportItemDblClick: function(dataview, record, item, index, e, eOpts) {
         this.onButtonSelectClick(this.down('#BtnSelect'));
    },

    onWindowShow: function(component, eOpts) {
        var store_ListReportTemplate = new Ext.data.ArrayStore({
            fields: [
                {name: 'field_descr', type: 'string', mapping:'field_descr'},
                {name: 'field_code', type: 'string', mapping:'field_code'}
            ],
            data:component.StoreData,
            viewConfig:{
                forceFit:true,
                emptyText:'Нет данных'
            }
        });
        var grid=this.down('#GridList');
        grid.getView().bindStore(store_ListReportTemplate);
    }

});