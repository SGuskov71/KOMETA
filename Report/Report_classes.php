<?php

/*
  Описание классов для создания шаблонов отчетов Опен офис документ текст
 *
 * Отчет это массив объектов которые определяют базовые сущности по группам
 *
 * в настройках отчета может быть указан sql запрос для получения данных
 * тогда #ИмяПоля это шаблон для получения данных из ИмяПоля запроса
 *
 * -абзац
 * -Блок текста (может получать данные из sql запроса отчета)
 * -Гиперссылка (может получать данные из sql запроса отчета)
 * -Рисунок (может получать данные из sql запроса отчета)
 * -Разрыв строки
 *
 * -Таблица (может имееть собственный sql запрос)
 * -Строка таблицы
 *
 * -Список (может имееть собственный sql запрос)
 *
 * -Другой отчет -???
 *
 * Свойства элемента настраиваются на клиенте как произвольные поля
 * перебирать будем
 * for (var i in obj) // обращение к свойствам объекта по индексу
  result += objName + "." + i + " = " + obj[i]
 * php var obj:Object = { prop1:25, prop2:"asd" };
  for (var prop:* in obj) {
  trace(prop + " = " + obj[prop]);
  }
 */

$ItemType_array = array("report" => "Отчет", "paragraph" => "Абзац", "text" => "Блок текста", "hyperlink" => "Гиперссылка",
 "image" => "Рисунок", "linebreak" => "Разрыв строки", "table" => "Таблица", "tableColunm" => "Столбец таблицы", "list" => "Список",
 "embedded_report" => "Подотчет");

//типы ввода интерактивных параметров
$ParamTypeInput = array(0 => 'простой', 1 => 'дата', 2 => 'словарь выпадающий', 3 => 'число', 6 => 'словарь в отдельном окне');

class ReportConstants {

  const CellStylesFileName = 'CellStyles.dat';

}

Class CItem {

  public $ItemType;
  public $Child; //массив подчиненных элементов
  public $Parent; //родительский(содержит текущий) элемент  public $Parent; //родительский(содержит текущий) элемент

  function __construct($_ItemType, $_Parent) {
    $this->ItemType = $_ItemType;
    $this->Parent = $_Parent;
    $this->Child = array();
  }

  function deleteItem() { //рекурсивно удаляет и все дочерние
  }

}
